apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: knr-test-image-pull
 namespace: default
spec:
 replicas: 1
 serviceName: knr-image-pull
 selector:
  matchLabels:
   app: knr-image-pull
 template:
  metadata:
   labels:
    app: knr-image-pull
  spec:
   containers:
   - name: knr-image-pull
    image: dev0-artifacts-registry.cn-shanghai.cr.aliyuncs.com/stargate/sfci/falcon-ali/kube-node-recycler-ali/test_docker_build:jenkins-falcon-ali-kube-node-recycler-ali-PR-8-1-itest
    ports:
    - containerPort: 80


kst-shh62f477f9avkfvdavlv


apiVersion: v1
data:
  pod-eviction-config.yaml: |-
    items:
{{ toYaml [] | indent 4 }}
kind: ConfigMap
metadata:
  labels: 
    app.kubernetes.io/name: kube-node-recycler
    app.kubernetes.io/part-of: clustermanagement
  name: kube-node-recycler
  namespace: default

kubectl get nodes --show-labels|awk -F" " {'print $6'}|awk -F"," {'print $17'}|sort -u



#!/bin/sh

#Usage: $0 <K8s Cluster Name>

acs-sso login --env 

if [ $? -ne 0 ];then
	#something failed, try harder
  rm -f ~/.alibabacloud_sso_sts; acs-sso login --env
fi

set -e # if anything else fails, abort
set -x # be verbose
# Export the creds from sso
eval `acs-sso login --env`

# get kubeconfig for a specific cluster.  If an arg is passed then use that, else if $CLUSTER_NAME is set use that, else "sam-processing1"
CLUSTER_NAME=${1:-${CLUSTER_NAME:ciac-dce-knr-cluster1}}
CLUSTER_ID=(`aliyun cs DescribeClusters | jq -r ".[] | select( .name == \"${CLUSTER_NAME}\") | .cluster_id"`)

if [ -z "$CLUSTER_ID" ];then
  echo -e "\n\nCould not find cluster ID for '$CLUSTER_NAME' - discovered cluster names:"
  aliyun cs DescribeClusters | jq -r ".[].name"
else
  aliyun cs DescribeClusterUserKubeconfig --TemporaryDurationMinutes 60 --ClusterId ${CLUSTER_ID} | jq -r '.config' > ~/.kube/config
fi
